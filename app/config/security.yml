security:
    encoders:
        #Symfony\Component\Security\Core\User\User: plaintext
        Troiswa\BlogBundle\Entity\UserFOS: sha512

    role_hierarchy:
        ROLE_ADMIN: ROLE_USER
        ROLE_SUPER_ADMIN: [ROLE_USER, ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]

    providers:
        #in_memory:
            #memory:
                #users:
                    #user:  { password: userpass, roles: [ 'ROLE_USER' ] }
                    #admin: { password: adminpass, roles: [ 'ROLE_ADMIN' ] }
        #main:
            #entity: { class : Troiswa\BlogBundle\Entity\User, property: username }

        fos_userbundle:
                    id: fos_user.user_provider.username

    firewalls:
        #dev:
            #pattern:  ^/(_(profiler|wdt)|css|images|js)/
            #security: false

        #login:
            #pattern:  ^/demo/secured/login$
            #security: false

        #secured_area:
            #pattern:    ^/
            #form_login:
                #check_path: security_check
                #login_path: security_login
                #default_target_path: /blog
            #logout:
                #path:   security_logout
                #target: /blog
            #anonymous: ~
            #http_basic:
            #    realm: "Secured Demo Area"

    #access_control:
        #- { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY, requires_channel: https }
        #- { path: ^/admin, roles: ROLE_ADMIN }

        main:
            pattern: ^/
            form_login:
                provider: fos_userbundle
                csrf_provider: form.csrf_provider
                default_target_path: /blog
            logout:       true
            anonymous:    true

    access_control:
        - { path: ^/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/register, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/resetting, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin/, role: ROLE_ADMIN }
